// Objective-C API for talking to github.com/spolabs/wallet-api/src/api/mobile Go package.
//   gobind -lang=objc github.com/spolabs/wallet-api/src/api/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Mobile_H__
#define __Mobile_H__

@import Foundation;
#include "Universe.objc.h"


@class MobileMyService;
@class MobileRPCError;
@class MobileWalletRPC;

@interface MobileMyService : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)walletDir;
// skipped method MyService.CreateWallet with unsupported parameter or return types

// skipped method MyService.GetAddresses with unsupported parameter or return types

// skipped method MyService.GetWallet with unsupported parameter or return types

// skipped method MyService.GetWallets with unsupported parameter or return types

// skipped method MyService.GetWalletsReadable with unsupported parameter or return types

// skipped method MyService.NewAddresses with unsupported parameter or return types

- (BOOL)reloadWallets:(NSError**)error;
- (BOOL)updateWalletLabel:(NSString*)wltID lable:(NSString*)lable error:(NSError**)error;
@end

/**
 * RPCError wraps errors from the skycoin CLI/RPC library
 */
@interface MobileRPCError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)error;
@end

/**
 * RPC provides methods for sending coins
 */
@interface MobileWalletRPC : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
/**
 * NewRPC creates RPC instance
 */
- (instancetype)init:(MobileMyService*)walletServ rpcAddr:(NSString*)rpcAddr;
- (MobileMyService*)walletControl;
- (void)setWalletControl:(MobileMyService*)v;
// skipped method WalletRPC.Balance with unsupported parameter or return types

// skipped method WalletRPC.BroadcastTransaction with unsupported parameter or return types

// skipped method WalletRPC.CreateTransaction with unsupported parameter or return types

- (BOOL)getBlockCount:(long*)ret0_ error:(NSError**)error;
// skipped method WalletRPC.GetBlocks with unsupported parameter or return types

// skipped method WalletRPC.GetBlocksBySeq with unsupported parameter or return types

// skipped method WalletRPC.GetLastBlocks with unsupported parameter or return types

// skipped method WalletRPC.GetTransaction with unsupported parameter or return types

/**
 * Send sends coins to recv address
 */
- (NSString*)send:(NSString*)walletFile recvAddr:(NSString*)recvAddr amount:(int64_t)amount error:(NSError**)error;
// skipped method WalletRPC.SendBatch with unsupported parameter or return types

@end

FOUNDATION_EXPORT MobileMyService* MobileNewMyService(NSString* walletDir, NSError** error);

// skipped function NewRPCError with unsupported parameter or return types


/**
 * NewRPC creates RPC instance
 */
FOUNDATION_EXPORT MobileWalletRPC* MobileNewWalletRPC(MobileMyService* walletServ, NSString* rpcAddr, NSError** error);

#endif
